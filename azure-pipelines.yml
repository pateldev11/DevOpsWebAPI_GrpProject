trigger:
  branches:
    include:
      - main

variables:
  buildConfiguration: 'Release'

pool:
  vmImage: 'windows-latest'

steps:

- task: Checkout@1

- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '7.x.x'
    installationPath: $(Agent.ToolsDirectory)/dotnet

# SonarQube integration (Optional/Mock)
- task: SonarQubePrepare@5
  inputs:
    SonarQube: 'SonarQubeServiceConnection' # or mock this name
    scannerMode: 'MSBuild'
    projectKey: 'DevOpsWebAPI'
    projectName: 'DevOps Web API'

- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: '**/*Tests.csproj'
    arguments: '--configuration $(buildConfiguration) --collect:"Code Coverage"'

- task: SonarQubeAnalyze@5
- task: SonarQubePublish@5
  inputs:
    pollingTimeoutSec: '300'

# Deliver Stage
- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

# Deploy to Dev (mocked)
- script: echo "Deploying to Dev Env on port 5000"
  displayName: 'Deploy to Dev Environment'

# Deploy to QAT (mocked)
- script: echo "Deploying to QAT Environment"
  displayName: 'Deploy to QAT Environment'

# Deploy to Staging (mocked)
- script: echo "Deploying to Staging Environment"
  displayName: 'Deploy to Staging Environment'

# Deploy to Production (mocked)
- script: echo "Deploying to Production Environment"
  displayName: 'Deploy to Production Environment'
